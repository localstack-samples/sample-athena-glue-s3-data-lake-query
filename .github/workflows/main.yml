name: Deploy infrastructure using CloudFormation

on:
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # “At 00:00 on Sunday.”
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  cloudformation:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Start LocalStack
        uses: LocalStack/setup-localstack@main
        with:
          image-tag: 'latest'
          use-pro: 'true'
          configuration: LS_LOG=trace
          install-awslocal: 'true'
        env:
          LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}
          IMAGE_NAME: 'localstack/localstack-pro:latest-bigdata'

      - name: Deploy on CloudFormation
        run: |
          make setup

      - name: Check deployed resources
        run: |
          sleep 45
          awslocal cloudformation describe-stacks --stack-name covid-lake-stack

      - name: Run tests
        run: |
          pip3 install pandas boto3 pytest
          pytest test_infra.py
      
      - name: Show LocalStack logs
        if: always()
        run: |
          localstack logs

      - name: Send a Slack notification
        if: failure() || github.event_name != 'pull_request'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}> | <{run_url}|View Workflow run>"
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Generate a Diagnostic Report
        if: failure()
        run: |
          curl -s localhost:4566/_localstack/diagnose | gzip -cf > diagnose.json.gz

      - name: Upload the Diagnostic Report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: diagnose.json.gz
          path: ./diagnose.json.gz
